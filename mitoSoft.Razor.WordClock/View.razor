@using System.Globalization
@using mitoSoft.Razor.WordClock.Cultures

@if (this.ClockService != null)
{
    <div @onclick="@OnClicked" class="container grid-square">

        @for (int row = -1; row < this.ClockService.MatrixHelper.RowCount + 1; row++)
        {
            <div class="row">
                @for (int col = -1; col < this.ClockService.MatrixHelper.ColumnCount + 1; col++)
                {
                    <div class="col">
                        <Cell Letter="@ClockService.MatrixHelper.GetLetter(row, col)" Positions="@_positions" Row="@row" Col="@col" />
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    private List<string> _positions { get; set; } = default!;
    private bool _cancelTask = false;

    public ClockService ClockService = new ClockService();

    [Parameter]
    public Action OnClick { get; set; } = default!;

    private void OnClicked()
    {
        this.OnClick?.Invoke();
    }

    public void StartClock()
    {
        Task.Run(() => this.BackgroundWorker());
    }

    public void StopClock()
    {
        _cancelTask = true;
    }

    private async void BackgroundWorker()
    {
        while (true)
        {
            if (ClockService.GetPositions(out var positions))
            {
                this._positions = positions;

                await InvokeAsync(StateHasChanged);
            }

            if (_cancelTask)
            {
                return;
            }

            await Task.Delay(500);
        }
    }
}